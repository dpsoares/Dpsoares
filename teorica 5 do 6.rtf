{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12540\viewh5620\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -abstration classe que nao pode ser instaciada \
-encapsulamento = (modifiers das vari\'e1veis) usarmos m\'e9todos para aceder diretamente como o get e o set. Esconder os nossos dados a nossa informa\'e7\'e3o.\
\
Class Produto \{\
	Private int id;\
	Private string;\
		.\
		.\
		.\
	getId()\{\
	Returnthis.id;\
	\}\
	setId(intid)\{\
	this.id=id; //neste caso d\'e1 10\
	\}\
\}\
\
\
Int number = 10;\
Product p = new Product;\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Private int id=1;\
	set (int int) \{\
	this id = id;\
\}\
\
-heranca = (is a) \
-Polimorfismo\
\
Utils \'85 ver static double\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Livro effective java {\field{\*\fldinst{HYPERLINK "http://index-of.es/JAVA/Effective%20Java.pdf"}}{\fldrslt http://index-of.es/JAVA/Effective%20Java.pdf}}\
\
Livro puzzlers java\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Source generate constructer using fields\
\
Overloading mesmo m\'e9todo com par\'e2metros diferentes \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Andre\
\
Novas classes \
\
	- Entity\
Package repository\
	- Entity Repository \
		-Product Repository\
		-Shelf\
\
utilizar Overloading \
	Criar uma fun\'e7\'e3o validate (\'93 \'94)\
\
\
java linkedhashmap\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Interface = contrato\
\
M\'e9todos default = quem for implementar a interface\
\
Java 8 posso chamar interface m\'e9todo static \
\
Nas interfaces todos os m\'e9todos s\'e3o abstratos \
\
???M\'e9todos abstratos n\'e3o podem ter c\'f3digo????\
\
Abstrato ou interface???\
= pensar da rela\'e7\'e3o \'93IS A\'94 usamos. Heran\'e7a\
\
\'93HAS A\'94 = n\'e3o existe uma rela\'e7\'e3o de heran\'e7a\
\
Construtores exemplo\
\
Produto () \{\
\}\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Enums s\'e3o listas de constantes \
 	Relacionado com Date time classes \
\
Formato ISO standart\
Local Date \
		2017-01-01\
Local Time \
	16:00:00\
Local Date Time \
	2017-01-01 16:00:00\
\
Local.date.now() d\'e1 me que dia \'e9 hoje\
\
Local.date.now().plusdays(1) dia de amanh\'e3\
\
quando temos constantes que podemos prever que v\'e3o ser alteradas \
Utilizamos base de dados. \
Porque se utilizarmos enum em vez de base de dados, cada vez que acrescentamos uma constante, temos que fazer o projecto outra vez e substituir o nosso programa pelo nova vers\'e3o.\
\
S\'f3 usamos enums quando sabemos que n\'e3o vamos alterar as constantes \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Aula dia 7 de Junho\
\
Crude\
Create\
Read\
Update\
Delete\
\
instance = \'e9 um padr\'e3o\
Utiliizamos instance __a classe s\'f3 \'e9 instanciada uma vez. V\'e1rias pessoas a aceder a mesma coisa, todos utilizam o mesmo objecto\
\
Curiosidade ver framework string \
\
Ver melhor o \
Try\{\
	system.ou.printli]nt(\'93)\
\
	myarrayInt[index]\
	catch\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Aula dia 8 de Junho \
\
stackoverflowError\
\
Botao direito no m\'e9todo e call veracity\
\
Override metadado \
Dado informativo que n\'e3o afecta o nosso c\'f3digo\
Nota informativa para o programa que voc\'eas est\'e3o a reescrever o c\'f3digo de uma superclasse\
\
Anota\'e7\'f5es\
@Deprecated (quer dizer que \'e9 algo que j\'e1 n\'e3o est\'e1 a ser desenvolvido, e que vai ser substitu\'eddo por um novo m\'e9todo. Dar tempo para quem usar esse m\'e9todo ou classe mudar para algo novo.\
\
Debugging (prossup\'f5e que existem breakpoints) \
\
Debug Java aplication\
\
Debug remoto \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Override = \
Overload = fun\'e7\'e3o com o mesmo nome e resultados diferentes  \
\
Construtor =\'e9 um m\'e9todo; \'e9 fun\'e7\'e3o que \'e9 instanciada \
Construtor retorna o que foi instanciado;\
\
\
\
Quando instancias um novo objecto \'e9 criado um construtor \
\
Heap guardamos objectos em memoria\
No stack guardamos variareis primitivas e referencias para objectos\
\
\
Construtor \'e9 herdado?\
N\'e3o \'e9 herdado.\
\
Que classe \'e9 superclasse de todas as classes = object\
\
Main \'e9 uma fun\'e7\'e3o\
\
M\'e9todo super = serve para chamar qualquer coisa da superclasse\
\
this = refers se ao objecto que estamos a mexer actualmente\
Para que serve a fun\'e7\'e3o \
this()\
 Corre o construtor dele pr\'f3prio \
\
this() e super() nah podem estar no mesmo m\'e9todo\
\
E ambos tem que ser a primeira linha\
\
\
Override nao pode ser usado num static metoth\
\
Override num m\'e9todo que foi overloaded?\
Supostamennte nao\
\
Metodo final = \'e9 um m\'e9todo que n\'e3o pode ser overridden (override)\
Variaveis final n\'e3o podem ser alteradas\
\
Rever section 5 \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
09-06-17\
\
Int = primitivo\
\
interger n\'e3o pode ser convertido numa string\
\
Genericos \
T = type\
\
Generico a heranca nao funciona nao existe \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Public static void main stirng[] args)\{\
	int x =4;\
	int y = 5;\
	int res = multiply(x, y);\
\
	sysout(\'93%d x %d = %d\'94,x , y, res);\
\}\
\
Public static int multiply (int a, int b) \{\
	int res =0;\
	While (b>0)\
		if (b % 2 != 0) \{\
			res += a;\
	\}\
		a = a << 1;\
		b = b >>1;\
		sys out (a);\
		sysout(b);\
)\
	Return res;\
)\
)\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
16-06-17\
\'97JEE\'97\
\
suportar que a app existe em paralelo em v\'e1rios s\'edtios;\
\
Exemplo\
	product p;\
		p.setName\
		p.setPrice\
			.\
			.\
			.\
\
Transac\'e3o tem inicio e um fim: s\'f3 existe a transa\'e7\'e3o se n\'e3o existirem erros do principio ao fim\
\
Servidor Aplicacional = \
	se a app for abaixo reinicia automaticamente;\
	monitoriza a app;\
	usado para aplicac\'f5es jee;\
	\
	WildFly (open source);\
	(em PT usam quase sempre oracle quando trabalham em java)\
\
Java Archive Structure \
\
	JAR.              WAR \
\
\
MVC Architecture\
MODEL <=> CONTROLLER => View =>USER => Controller\
\
View =. Apresenta\'e7\'e3o (interface)\
	- d\'e1 ordens ao controlador;\
\
N tier Architecture = pode ter n camadas pelo meio\
 \
Introduction to JSF\
	JSF basics\
	JSF Hello World \
	Tag libraries\
	Primefaces\
\
Web app e Services \
Web app = cada vez menos utilizado pelo trabalho que d\'e1 no c\'f3digo\
No entanto c\'e1 em PT ainda usam muito isto (JSF)\
\
Services\
	Controller\
	Model \
Muito utilizado para separar o c\'f3digo da app do c\'f3digo html java script\
\
No lado temos c\'f3digo noutro temos a parte visual \
\
Corre no computador do cliente enquanto o view do JSF \'e9 processado no servidor e depois \'e9 que mostra \'e4 pessoa\
\
\
JSF vantagens: d\'e1 nos mais produtividade (templates = bases para renderizar para termos o html normal)\
	= podemos dividir a pagina em v\'e1rias partes com templates separados; \
	= \'e9 bom porque fazemos casos gen\'e9ricos que depois reaproveitamos noutras paginas\
\
JSF Appication Elements  \
	web.xml \
	faces-config.xml\
	\
\
Labaltar01\
\
Intalar e criar server com WildFly e jboss\
System library\
	src\
		main\
			web-inf\
				jboss-web.xml\
				template.xhtml\
				web.xml\
			index\
NOTAS: web.xml todas as aplcacoes web t\'e9m isso\
\
<?xml \'85..\
<html \'85..\
<h:head>\
\
</h:head>\
<h:body>\
	<h:form>\
		<h:inputText value=\'93\'85.\'94 />\
		<\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
@named(\'93navigator\'94)\
	quer dizer que quem quiser utilizar esta classe tem que ter este nome\
@RequestScoped \
@ViewScoped \
______________________________________________________________________________\
18-06-17\
{\field{\*\fldinst{HYPERLINK "https://www.google.pt/search?q=oca+oracle+certified+associate+java+se+8+programmer+i+study+guide+exam+1z0-808&oq=oca+oracle+&aqs=chrome.1.69i57j0l5.10748j0j7&sourceid=chrome&ie=UTF-8"}}{\fldrslt https://www.google.pt/search?q=oca+oracle+certified+associate+java+se+8+programmer+i+study+guide+exam+1z0-808&oq=oca+oracle+&aqs=chrome.1.69i57j0l5.10748j0j7&sourceid=chrome&ie=UTF-8}}\
\
oca oracle certified associate java se 8 programmer i study guide exam 1z0-808\
\
{\field{\*\fldinst{HYPERLINK "http://www.gocertify.com/quizzes/oracle/ocajp-java-quiz-1.html"}}{\fldrslt http://www.gocertify.com/quizzes/oracle/ocajp-java-quiz-1.html}}\
\
HTTP \
Get and Post\
quando entramos num site temos o get\
Quando fazemos formul\'e1rios ou login fazemos um post (estamos a enviar informa\'e7\'e3o)\
Post(inserir informa\'e7\'e3o no servidor)\
\
Jsf turtorial\
{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=N3smu1I5JWA"}}{\fldrslt https://www.youtube.com/watch?v=N3smu1I5JWA}}\
\
\
Propriedades\
\
Project facets\
\
	active java server faces\
	java\
	javacripts\
	dynamic web module\
\
Project maven\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
20-06-17\
EL expression language can use most of the usual java operators;\
\
Rendered \'e9 uma condi\'e7\'e3o;\
\
JSF validar sempre, n\'e3o deixar passar para a base de dados;\
\
Campo \'e9 require true or false \
se n\'e3o for require o pedido n\'e3o avanca\
\
\
Ver expressoes regulares \
Regular expression testers \
\
Regex101.com\
 \
\
Count \'e9 um long \
\
Faceprime dicas {\field{\*\fldinst{HYPERLINK "https://www.youtube.com/channel/UCTgmp69aBOlLnPEqlUyetWw/videos"}}{\fldrslt https://www.youtube.com/channel/UCTgmp69aBOlLnPEqlUyetWw/videos}}\
Faceprime menubar. 	{\field{\*\fldinst{HYPERLINK "https://www.primefaces.org/showcase/ui/menu/menubar.xhtml"}}{\fldrslt https://www.primefaces.org/showcase/ui/menu/menubar.xhtml}}\
{\field{\*\fldinst{HYPERLINK "https://www.primefaces.org/showcase/ui/menu/menu.xhtml"}}{\fldrslt https://www.primefaces.org/showcase/ui/menu/menu.xhtml}}\
\
Dicas faceprime e bootstrap\
{\field{\*\fldinst{HYPERLINK "http://blog.algaworks.com/primefaces-com-bootstrap/"}}{\fldrslt http://blog.algaworks.com/primefaces-com-bootstrap/}}\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
22-0617\
CDI\
ManageBean not using CDI\
\
Inversion of Control (IoC)\
\
ManageBean using CDI = n\'e3o est\'e1 no construtor ,injection, class message, message pode ser o interface\
\
Ver slide Bean scopes \
\
CDI bean lifecycle\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=FAYTg0ZmSA4"}}{\fldrslt https://www.youtube.com/watch?v=FAYTg0ZmSA4}}\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}